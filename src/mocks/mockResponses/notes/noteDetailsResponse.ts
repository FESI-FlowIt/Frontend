import { Note } from '@/interfaces/note';

// 노트 상세 정보가 필요한 경우를 위한 mock 데이터
export const mockNoteDetails: Note[] = [
  {
    noteId: 1,
    todoId: 1,
    title: '자바스크립트 기초 정리',
    content:
      '자바스크립트의 기본 문법과 변수, 함수에 대해 학습했다.\n\nvar, let, const의 차이점을 이해하고 호이스팅 개념도 익혔다.',
    wordCount: 45,
    link: 'https://developer.mozilla.org/ko/docs/Web/JavaScript',
    createdAt: '2024-01-15T10:30:00.000Z',
    updatedAt: '2024-01-15T10:30:00.000Z',
  },
  {
    noteId: 2,
    todoId: 1,
    title: 'DOM 조작 실습',
    content: 'querySelector와 addEventListener를 사용해서 간단한 인터랙션을 구현해봤다.',
    wordCount: 32,
    link: 'https://www.w3schools.com/js/js_htmldom.asp',
    createdAt: '2024-01-16T14:20:00.000Z',
    updatedAt: '2024-01-16T14:20:00.000Z',
  },
  {
    noteId: 3,
    todoId: 2,
    title: 'useState Hook 학습',
    content: 'React의 상태 관리를 위한 useState Hook에 대해 학습했다.',
    wordCount: 28,
    link: 'https://react.dev/reference/react/useState',
    createdAt: '2024-01-17T09:15:00.000Z',
    updatedAt: '2024-01-17T09:15:00.000Z',
  },
  {
    noteId: 4,
    todoId: 2,
    title: 'useEffect Hook 정리',
    content: '컴포넌트의 생명주기와 사이드 이펙트 처리를 위한 useEffect에 대해 공부했다.',
    wordCount: 35,
    link: 'https://react.dev/reference/react/useEffect',
    createdAt: '2024-01-17T15:30:00.000Z',
    updatedAt: '2024-01-17T15:30:00.000Z',
  },
  {
    noteId: 5,
    todoId: 3,
    title: 'TypeScript 기초',
    content: '타입 시스템의 장점과 기본 타입들에 대해 학습했다.',
    wordCount: 25,
    link: 'https://www.typescriptlang.org/docs/',
    createdAt: '2024-01-18T11:00:00.000Z',
    updatedAt: '2024-01-18T11:00:00.000Z',
  },
  {
    noteId: 6,
    todoId: 4,
    title: '컬러 시스템 정리',
    content: '브랜드 컬러와 시맨틱 컬러에 대해 정리하고 팔레트를 구성했다.',
    wordCount: 30,
    link: 'https://www.figma.com/blog/how-to-build-a-color-system/',
    createdAt: '2024-01-19T13:45:00.000Z',
    updatedAt: '2024-01-19T13:45:00.000Z',
  },
  {
    noteId: 7,
    todoId: 4,
    title: '타이포그래피 가이드',
    content: '폰트 크기, 행간, 자간 등의 타이포그래피 규칙을 정의했다.',
    wordCount: 28,
    link: 'https://material.io/design/typography/the-type-system.html',
    createdAt: '2024-01-19T16:20:00.000Z',
    updatedAt: '2024-01-19T16:20:00.000Z',
  },
  {
    noteId: 8,
    todoId: 5,
    title: '테스트 계획 수립',
    content: '사용자 테스트의 목표와 방법론을 정리하고 테스트 시나리오를 작성했다.',
    wordCount: 40,
    link: 'https://www.nngroup.com/articles/usability-testing-101/',
    createdAt: '2024-01-20T10:00:00.000Z',
    updatedAt: '2024-01-20T10:00:00.000Z',
  },
  {
    noteId: 9,
    todoId: 6,
    title: '정렬 알고리즘 정리',
    content: '버블 정렬, 선택 정렬, 삽입 정렬의 원리와 시간복잡도를 정리했다.',
    wordCount: 35,
    link: 'https://www.geeksforgeeks.org/sorting-algorithms/',
    createdAt: '2024-01-21T14:30:00.000Z',
    updatedAt: '2024-01-21T14:30:00.000Z',
  },
  {
    noteId: 10,
    todoId: 7,
    title: 'RESTful API 설계 원칙',
    content:
      'REST 아키텍처의 6가지 제약 조건과 HTTP 메서드의 올바른 사용법에 대해 학습했다.\n\nGET, POST, PUT, DELETE의 용도와 상태 코드의 의미를 정리했다.',
    wordCount: 52,
    link: 'https://restfulapi.net/',
    createdAt: '2024-01-22T09:00:00.000Z',
    updatedAt: '2024-01-22T09:00:00.000Z',
  },
  {
    noteId: 11,
    todoId: 7,
    title: 'Express.js 기본 설정',
    content:
      'Node.js 환경에서 Express.js 서버를 구축하는 방법을 학습했다.\n\n미들웨어 개념과 라우팅 설정에 대해 정리했다.',
    wordCount: 48,
    link: 'https://expressjs.com/en/starter/installing.html',
    createdAt: '2024-01-22T11:30:00.000Z',
    updatedAt: '2024-01-22T11:30:00.000Z',
  },
  {
    noteId: 12,
    todoId: 8,
    title: 'ERD 설계',
    content:
      '데이터베이스 모델링을 위한 개체-관계 다이어그램을 설계했다.\n\n정규화 과정과 외래키 관계 설정에 대해 학습했다.',
    wordCount: 45,
    link: 'https://www.lucidchart.com/pages/er-diagrams',
    createdAt: '2024-01-23T14:15:00.000Z',
    updatedAt: '2024-01-23T14:15:00.000Z',
  },
  {
    noteId: 13,
    todoId: 8,
    title: 'MySQL 테이블 생성',
    content:
      'MySQL 데이터베이스에서 테이블을 생성하고 인덱스를 설정하는 방법을 학습했다.\n\nDDL 문법과 데이터 타입 선택에 대해 정리했다.',
    wordCount: 50,
    link: 'https://dev.mysql.com/doc/refman/8.0/en/create-table.html',
    createdAt: '2024-01-23T16:45:00.000Z',
    updatedAt: '2024-01-23T16:45:00.000Z',
  },
  {
    noteId: 14,
    todoId: 9,
    title: 'Next.js 13 App Router',
    content:
      'Next.js 13의 새로운 App Router 구조에 대해 학습했다.\n\n폴더 기반 라우팅과 레이아웃 시스템의 장점을 정리했다.',
    wordCount: 46,
    link: 'https://nextjs.org/docs/app',
    createdAt: '2024-01-24T10:20:00.000Z',
    updatedAt: '2024-01-24T10:20:00.000Z',
  },
  {
    noteId: 15,
    todoId: 10,
    title: '와이어프레임 작성',
    content:
      'Figma를 사용해서 웹사이트의 와이어프레임을 작성했다.\n\n정보 구조와 사용자 흐름을 고려한 페이지 레이아웃을 설계했다.',
    wordCount: 52,
    link: 'https://www.figma.com/resource-library/wireframing-guide/',
    createdAt: '2024-01-25T13:30:00.000Z',
    updatedAt: '2024-01-25T13:30:00.000Z',
  },
  {
    noteId: 16,
    todoId: 10,
    title: '프로토타입 인터랙션',
    content:
      'Figma의 프로토타이핑 기능을 사용해서 페이지 간 전환 효과를 구현했다.\n\n사용자 테스트를 위한 인터랙티브 프로토타입을 완성했다.',
    wordCount: 58,
    link: 'https://help.figma.com/hc/en-us/articles/360040314193-Guide-to-prototyping-in-Figma',
    createdAt: '2024-01-25T15:00:00.000Z',
    updatedAt: '2024-01-25T15:00:00.000Z',
  },
  {
    noteId: 17,
    todoId: 11,
    title: 'CSS Grid 레이아웃',
    content:
      'CSS Grid를 사용한 반응형 레이아웃 구현 방법을 학습했다.\n\ngrid-template-areas와 fr 단위의 활용법을 정리했다.',
    wordCount: 48,
    link: 'https://css-tricks.com/snippets/css/complete-guide-grid/',
    createdAt: '2024-01-26T09:45:00.000Z',
    updatedAt: '2024-01-26T09:45:00.000Z',
  },
  {
    noteId: 18,
    todoId: 11,
    title: 'Flexbox 활용법',
    content:
      'Flexbox를 사용한 1차원 레이아웃 구성 방법을 학습했다.\n\njustify-content와 align-items 속성의 차이점을 정리했다.',
    wordCount: 50,
    link: 'https://css-tricks.com/snippets/css/a-guide-to-flexbox/',
    createdAt: '2024-01-26T12:15:00.000Z',
    updatedAt: '2024-01-26T12:15:00.000Z',
  },
  {
    noteId: 19,
    todoId: 12,
    title: '사용자 여정 맵핑',
    content:
      '사용자의 서비스 이용 과정을 단계별로 분석하고 터치포인트를 식별했다.\n\n페인 포인트 개선을 위한 아이디어를 도출했다.',
    wordCount: 55,
    link: 'https://www.nngroup.com/articles/customer-journey-mapping/',
    createdAt: '2024-01-27T11:00:00.000Z',
    updatedAt: '2024-01-27T11:00:00.000Z',
  },
  {
    noteId: 20,
    todoId: 13,
    title: 'AWS EC2 설정',
    content:
      'Amazon EC2 인스턴스를 생성하고 웹 서버를 배포하는 과정을 학습했다.\n\n보안 그룹 설정과 SSH 접속 방법을 정리했다.',
    wordCount: 50,
    link: 'https://docs.aws.amazon.com/ec2/index.html',
    createdAt: '2024-01-28T14:30:00.000Z',
    updatedAt: '2024-01-28T14:30:00.000Z',
  },
  {
    noteId: 21,
    todoId: 13,
    title: 'Docker 컨테이너화',
    content:
      'Docker를 사용해서 애플리케이션을 컨테이너화하는 방법을 학습했다.\n\nDockerfile 작성법과 이미지 빌드 과정을 정리했다.',
    wordCount: 52,
    link: 'https://docs.docker.com/get-started/',
    createdAt: '2024-01-28T16:20:00.000Z',
    updatedAt: '2024-01-28T16:20:00.000Z',
  },
  {
    noteId: 22,
    todoId: 14,
    title: 'Git Flow 전략',
    content:
      '팀 개발을 위한 Git Flow 브랜치 전략에 대해 학습했다.\n\nfeature, develop, main 브랜치의 역할과 머지 과정을 정리했다.',
    wordCount: 50,
    link: 'https://nvie.com/posts/a-successful-git-branching-model/',
    createdAt: '2024-01-29T10:15:00.000Z',
    updatedAt: '2024-01-29T10:15:00.000Z',
  },
  {
    noteId: 23,
    todoId: 15,
    title: 'WCAG 2.1 가이드라인',
    content:
      '웹 접근성 가이드라인 WCAG 2.1의 주요 원칙들을 학습했다.\n\n인지 가능, 운용 가능, 이해 가능, 견고함의 4가지 원칙을 정리했다.',
    wordCount: 55,
    link: 'https://www.w3.org/WAI/WCAG21/Understanding/',
    createdAt: '2024-01-30T13:00:00.000Z',
    updatedAt: '2024-01-30T13:00:00.000Z',
  },
  {
    noteId: 24,
    todoId: 15,
    title: '키보드 내비게이션 테스트',
    content:
      '마우스 없이 키보드만으로 웹사이트를 탐색하는 테스트를 진행했다.\n\nTab 순서와 포커스 표시의 중요성을 확인했다.',
    wordCount: 48,
    link: 'https://webaim.org/articles/keyboard/',
    createdAt: '2024-01-30T15:30:00.000Z',
    updatedAt: '2024-01-30T15:30:00.000Z',
  },
];

// 특정 노트의 상세 정보를 가져오는 헬퍼 함수
export const getNoteDetailById = (noteId: number): Note | undefined => {
  return mockNoteDetails.find(note => note.noteId === noteId);
};
